package ProductDescription.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class ProductReference extends BaseConcept {
  public static final String concept = "ProductDescription.structure.ProductReference";
  public static final String MIN = "min";
  public static final String MAX = "max";
  public static final String PRODUCT = "product";

  public ProductReference(SNode node) {
    super(node);
  }

  public int getMin() {
    return this.getIntegerProperty(ProductReference.MIN);
  }

  public void setMin(int value) {
    this.setIntegerProperty(ProductReference.MIN, value);
  }

  public int getMax() {
    return this.getIntegerProperty(ProductReference.MAX);
  }

  public void setMax(int value) {
    this.setIntegerProperty(ProductReference.MAX, value);
  }

  public ProductType getProduct() {
    return (ProductType) this.getReferent(ProductType.class, ProductReference.PRODUCT);
  }

  public void setProduct(ProductType node) {
    super.setReferent(ProductReference.PRODUCT, node);
  }

  public static ProductReference newInstance(SModel sm, boolean init) {
    return (ProductReference) SModelUtil_new.instantiateConceptDeclaration("ProductDescription.structure.ProductReference", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static ProductReference newInstance(SModel sm) {
    return ProductReference.newInstance(sm, false);
  }
}
